name: Tag, Release and Publish

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies with uv
        run: |
          pip install uv toml
          uv sync --no-dev

      - name: Extract Version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])")
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Version: $VERSION"

      - name: Create Git Tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG=${{ steps.get_version.outputs.version }}
          # Create the tag if it doesn't exist
          if git rev-parse "$TAG" >/dev/null 2>&1; then
              echo "Tag $TAG already exists"
          else
              git tag $TAG
              git push origin $TAG
          fi

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          draft: false
          prerelease: false

  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install uv
        run: pip install uv

      - name: Install Production Dependencies
        run: uv sync --no-dev

      - name: Build Package
        run: uv build

      - name: Publish Package to PyPI
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: uv publish -r pypi --token $PYPI_TOKEN
